#!/bin/bash

# Cvp Vulnerability Scanner - OWASP Top 10 Scanner
# Made by Cyber Vigilance PK and Faraz Ahmed

# Function to install missing packages
install_missing_packages() {
    for pkg in curl nmap figlet; do
        if ! command -v $pkg &> /dev/null; then
            echo "Installing $pkg..."
            pkg install -y $pkg
        fi
    done
}

# Function to display a colorful banner
display_banner() {
    echo -e "\e[92m"
    figlet -c "Cvp Vulnerability Scanner"
    echo -e "\e[93mMade by Cyber Vigilance PK and Faraz Ahmed"
    echo -e "\e[0m"
}

# Function to generate random colors
random_color() {
    COLORS=(31 32 33 34 35 36)
    echo -e "\e[${COLORS[$RANDOM % ${#COLORS[@]}]}m$1\e[0m"
}

# Function to check for SQL Injection vulnerabilities
check_sql_injection() {
    echo "$(random_color "Checking for SQL Injection vulnerabilities...")"
    sql_payload="' OR '1'='1"
    response=$(curl -s -G --data-urlencode "id=$sql_payload" "$TARGET")
    if echo "$response" | grep -q "SQL syntax"; then
        echo "$(random_color "[!] Potential SQL Injection vulnerability found!")"
    else
        echo "$(random_color "[-] No SQL Injection vulnerabilities detected.")"
    fi
}

# Function to check for XSS vulnerabilities
check_xss() {
    echo "$(random_color "Checking for XSS vulnerabilities...")"
    xss_payload="<script>alert('XSS')</script>"
    response=$(curl -s -G --data-urlencode "q=$xss_payload" "$TARGET")
    if echo "$response" | grep -q "$xss_payload"; then
        echo "$(random_color "[!] Potential XSS vulnerability found!")"
    else
        echo "$(random_color "[-] No XSS vulnerabilities detected.")"
    fi
}

# Function to check for outdated software using nmap
check_outdated_software() {
    echo "$(random_color "Checking for outdated software...")"
    nmap -sV --script=vulners "$TARGET" | grep "CVE"
    if [ $? -eq 0 ]; then
        echo "$(random_color "[!] Potential outdated software or known vulnerabilities found!")"
    else
        echo "$(random_color "[-] No outdated software detected.")"
    fi
}

# Ensure required packages are installed
install_missing_packages

# Display banner
display_banner

# Prompt for the target website
read -p "$(random_color 'Enter the target website (e.g., http://example.com): ')" TARGET

# Validate user input
if [[ -z "$TARGET" ]]; then
    echo "$(random_color '[!] No website provided. Exiting...')"
    exit 1
fi

# Start scanning
echo "$(random_color "Starting Cvp Vulnerability Scanner on $TARGET")"

check_sql_injection
check_xss
check_outdated_software

echo "$(random_color 'Scan completed!')"
